[{"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/index.tsx":"1","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/App.tsx":"2","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/Providers.tsx":"3","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/style/Global.tsx":"4","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/PageLoader.tsx":"5","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/NotFound.tsx":"6","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftGlobalNotification.tsx":"7","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/hooks.ts":"8","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/index.ts":"9","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/index.ts":"10","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/index.ts":"11","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/index.ts":"12","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/getRpcUrl.ts":"13","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/index.tsx":"14","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Menu/index.tsx":"15","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/index.tsx":"16","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/ThemeContext.tsx":"17","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/BlockContext.tsx":"18","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/RefreshContext.tsx":"19","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/Localisation/languageContext.tsx":"20","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/layout/Page.tsx":"21","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/index.ts":"22","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/actions.ts":"23","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/Syrup.tsx":"24","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Menu/config.ts":"25","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/Home.tsx":"26","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/Farms.tsx":"27","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/Lottery.tsx":"28","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/multicall.ts":"29","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useI18n.ts":"30","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftList.tsx":"31","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/HowItWorks.tsx":"32","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftInfo.tsx":"33","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/CurrentIfo.tsx":"34","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/PastIfo.tsx":"35","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/contexts/NftProvider.tsx":"36","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/Hero.tsx":"37","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/nfts.ts":"38","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/layout/Container.tsx":"39","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useRefresh.ts":"40","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useTheme.ts":"41","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/web3.ts":"42","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/Localisation/translationsContext.ts":"43","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/localisation/languageCodes.ts":"44","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/translateTextHelpers.ts":"45","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/PastDrawsPage.tsx":"46","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/NextDrawPage.tsx":"47","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/Divider.tsx":"48","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CakeStats.tsx":"49","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/TotalValueLockedCard.tsx":"50","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/Divider.tsx":"51","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoTabButtons/index.tsx":"52","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftGrid.tsx":"53","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/StatusCard.tsx":"54","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftProgressSimple.tsx":"55","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftProgress.tsx":"56","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/Divider.tsx":"57","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/Hero.tsx":"58","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCards.tsx":"59","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/utils/contracts.ts":"60","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/FarmCard.tsx":"61","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/Title.tsx":"62","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/LotteryCard.tsx":"63","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/FarmStakingCard.tsx":"64","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/PoolCard.tsx":"65","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/Coming.tsx":"66","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/pools/index.ts":"67","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/lotteryUtils.js":"68","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/addressHelpers.ts":"69","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useContract.ts":"70","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/PoolTabButtons/index.tsx":"71","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/PastLotteryDataContext.tsx":"72","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useBlock.ts":"73","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/types.ts":"74","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmTabButtons/index.tsx":"75","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftCard/index.tsx":"76","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/HowItWorks.tsx":"77","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx":"78","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CardValue.tsx":"79","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/WinningNumbers.tsx":"80","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftInWalletCard.tsx":"81","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/InfoRow.tsx":"82","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/index.tsx":"83","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/LotteryProgress.tsx":"84","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/layout/Flex.tsx":"85","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/CardActionsContainer.tsx":"86","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/CardHeading.tsx":"87","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/DetailsSection.tsx":"88","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/LotteryJackpot.tsx":"89","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CakeWalletBalance.tsx":"90","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CakeHarvestBalance.tsx":"91","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/CardFooter.tsx":"92","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/CardTitle.tsx":"93","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/Card.tsx":"94","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/pools/fetchPoolsUser.ts":"95","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/pools/fetchPools.ts":"96","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/index.ts":"97","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/index.ts":"98","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/api.ts":"99","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useTokenBalance.ts":"100","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/formatBalance.ts":"101","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/formatTimePeriod.ts":"102","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/getTimePeriods.ts":"103","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/index.tsx":"104","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/TransferNftModal.tsx":"105","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/BurnNftModal.tsx":"106","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/ClaimNftModal.tsx":"107","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/helpers/CountdownHelpers.ts":"108","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/CardContent.tsx":"109","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardContribute.tsx":"110","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardTime.tsx":"111","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardDetails.tsx":"112","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardDescription.tsx":"113","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/HarvestAction.tsx":"114","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/StakeAction.tsx":"115","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Tags.tsx":"116","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardProgress.tsx":"117","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardHeader.tsx":"118","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastDrawsHistory/Legend.tsx":"119","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastDrawsHistory/HistoryChart.tsx":"120","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/pools.ts":"121","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/Image.tsx":"122","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/contracts.ts":"123","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/ifo.ts":"124","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/farms.ts":"125","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useGetLotteryHasDrawn.ts":"126","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useTickets.ts":"127","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useTimer.ts":"128","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/hooks/useGetRecentLotteryRoundData.ts":"129","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/getLiquidityUrlPathParts.ts":"130","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useApprove.ts":"131","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/Loading.tsx":"132","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx":"133","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/erc20.ts":"134","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx":"135","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useAllEarnings.ts":"136","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useWeb3.ts":"137","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/UnlockButton.tsx":"138","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/ContributeModal.tsx":"139","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/LabelButton.tsx":"140","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/WithdrawModal.tsx":"141","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Balance.tsx":"142","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/DepositModal.tsx":"143","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastDrawsHistory/LineChartWrapper.tsx":"144","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/getLotteryRoundData.ts":"145","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useAllowance.ts":"146","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useHarvest.ts":"147","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx":"148","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx":"149","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useUnstake.ts":"150","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useStake.ts":"151","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/callHelpers.ts":"152","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/Timestamp.tsx":"153","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PrizeGrid.tsx":"154","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx":"155","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/LotteryCardHeading.tsx":"156","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Input/BalanceInput.tsx":"157","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/TokenInput/index.ts":"158","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/helpers/formatLotteryDate.ts":"159","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/ModalActions/index.ts":"160","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/UserTicketsModal.tsx":"161","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Input/Input.tsx":"162","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/TokenInput/TokenInput.tsx":"163","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/ModalActions/ModalActions.tsx":"164","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Input/index.ts":"165","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Spacer/index.ts":"166","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Spacer/Spacer.tsx":"167","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/HarvestButton.tsx":"168","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/OldSyrupTitle.tsx":"169","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/CompoundModal.tsx":"170","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/WithdrawModal.tsx":"171","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/DepositModal.tsx":"172","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CakeWinnings.tsx":"173","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/YouWonCard.tsx":"174","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NoNftsToClaimCard.tsx":"175","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/UnlockWalletCard.tsx":"176","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useFarmsWithBalance.ts":"177","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useBuyLottery.ts":"178","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/BuyTicketModal.tsx":"179","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/index.tsx":"180","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TotalPrizesCard/index.tsx":"181","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/YourPrizesCard/index.tsx":"182","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/SecondaryCard.tsx":"183","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Label/index.ts":"184","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/farms/index.ts":"185","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/ExpandableSectionButton/index.ts":"186","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/TicketActions.tsx":"187","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx":"188","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx":"189","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/farms/fetchFarms.ts":"190","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/farms/fetchFarmUser.ts":"191","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Label/Label.tsx":"192","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx":"193","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/PurchaseWarningModal.tsx":"194","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/TicketInput/index.ts":"195","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/TicketInput/TicketInput.tsx":"196"},{"size":265,"mtime":1611555732000,"results":"197","hashOfConfig":"198"},{"size":2389,"mtime":1611638625000,"results":"199","hashOfConfig":"198"},{"size":1261,"mtime":1611638625000,"results":"200","hashOfConfig":"198"},{"size":575,"mtime":1611640730000,"results":"201","hashOfConfig":"198"},{"size":374,"mtime":1611638308000,"results":"202","hashOfConfig":"198"},{"size":821,"mtime":1611638625000,"results":"203","hashOfConfig":"198"},{"size":2850,"mtime":1611638625000,"results":"204","hashOfConfig":"198"},{"size":2497,"mtime":1611555732000,"results":"205","hashOfConfig":"198"},{"size":34,"mtime":1611555732000,"results":"206","hashOfConfig":"198"},{"size":33,"mtime":1611555732000,"results":"207","hashOfConfig":"198"},{"size":34,"mtime":1611555732000,"results":"208","hashOfConfig":"198"},{"size":36,"mtime":1611555732000,"results":"209","hashOfConfig":"198"},{"size":318,"mtime":1611555732000,"results":"210","hashOfConfig":"198"},{"size":1058,"mtime":1611638625000,"results":"211","hashOfConfig":"198"},{"size":1043,"mtime":1611638224000,"results":"212","hashOfConfig":"198"},{"size":646,"mtime":1611555732000,"results":"213","hashOfConfig":"198"},{"size":906,"mtime":1611638625000,"results":"214","hashOfConfig":"198"},{"size":746,"mtime":1611555732000,"results":"215","hashOfConfig":"198"},{"size":912,"mtime":1611555732000,"results":"216","hashOfConfig":"198"},{"size":2909,"mtime":1611555732000,"results":"217","hashOfConfig":"198"},{"size":406,"mtime":1611555732000,"results":"218","hashOfConfig":"198"},{"size":275,"mtime":1611555732000,"results":"219","hashOfConfig":"198"},{"size":256,"mtime":1611555732000,"results":"220","hashOfConfig":"198"},{"size":4304,"mtime":1611657244000,"results":"221","hashOfConfig":"198"},{"size":1189,"mtime":1611640629000,"results":"222","hashOfConfig":"198"},{"size":1898,"mtime":1611648323000,"results":"223","hashOfConfig":"198"},{"size":4346,"mtime":1611659006000,"results":"224","hashOfConfig":"198"},{"size":2620,"mtime":1611656996000,"results":"225","hashOfConfig":"198"},{"size":939,"mtime":1611555732000,"results":"226","hashOfConfig":"198"},{"size":547,"mtime":1611555732000,"results":"227","hashOfConfig":"198"},{"size":398,"mtime":1611555732000,"results":"228","hashOfConfig":"198"},{"size":2751,"mtime":1611657123000,"results":"229","hashOfConfig":"198"},{"size":754,"mtime":1611555732000,"results":"230","hashOfConfig":"198"},{"size":3683,"mtime":1611656701000,"results":"231","hashOfConfig":"198"},{"size":459,"mtime":1611555732000,"results":"232","hashOfConfig":"198"},{"size":6603,"mtime":1611555732000,"results":"233","hashOfConfig":"198"},{"size":951,"mtime":1611638625000,"results":"234","hashOfConfig":"198"},{"size":605,"mtime":1611658588000,"results":"235","hashOfConfig":"198"},{"size":304,"mtime":1611555732000,"results":"236","hashOfConfig":"198"},{"size":251,"mtime":1611555732000,"results":"237","hashOfConfig":"198"},{"size":360,"mtime":1611555732000,"results":"238","hashOfConfig":"198"},{"size":748,"mtime":1611555732000,"results":"239","hashOfConfig":"198"},{"size":391,"mtime":1611555732000,"results":"240","hashOfConfig":"198"},{"size":1914,"mtime":1611555732000,"results":"241","hashOfConfig":"198"},{"size":1574,"mtime":1611555732000,"results":"242","hashOfConfig":"198"},{"size":1182,"mtime":1611657017000,"results":"243","hashOfConfig":"198"},{"size":1801,"mtime":1611638625000,"results":"244","hashOfConfig":"198"},{"size":185,"mtime":1611555732000,"results":"245","hashOfConfig":"198"},{"size":1661,"mtime":1611656328000,"results":"246","hashOfConfig":"198"},{"size":1099,"mtime":1611638625000,"results":"247","hashOfConfig":"198"},{"size":185,"mtime":1611555732000,"results":"248","hashOfConfig":"198"},{"size":752,"mtime":1611638625000,"results":"249","hashOfConfig":"198"},{"size":318,"mtime":1611638625000,"results":"250","hashOfConfig":"198"},{"size":1333,"mtime":1611638625000,"results":"251","hashOfConfig":"198"},{"size":1049,"mtime":1611638625000,"results":"252","hashOfConfig":"198"},{"size":2904,"mtime":1611657145000,"results":"253","hashOfConfig":"198"},{"size":185,"mtime":1611555732000,"results":"254","hashOfConfig":"198"},{"size":1873,"mtime":1611656867000,"results":"255","hashOfConfig":"198"},{"size":549,"mtime":1611555732000,"results":"256","hashOfConfig":"198"},{"size":959,"mtime":1611555732000,"results":"257","hashOfConfig":"198"},{"size":5119,"mtime":1611666916000,"results":"258","hashOfConfig":"198"},{"size":238,"mtime":1611638625000,"results":"259","hashOfConfig":"198"},{"size":3061,"mtime":1611656451000,"results":"260","hashOfConfig":"198"},{"size":2778,"mtime":1611656406000,"results":"261","hashOfConfig":"198"},{"size":8674,"mtime":1611638625000,"results":"262","hashOfConfig":"198"},{"size":2185,"mtime":1611657193000,"results":"263","hashOfConfig":"198"},{"size":3727,"mtime":1611555732000,"results":"264","hashOfConfig":"198"},{"size":7474,"mtime":1611555732000,"results":"265","hashOfConfig":"198"},{"size":657,"mtime":1611555732000,"results":"266","hashOfConfig":"198"},{"size":2755,"mtime":1611555732000,"results":"267","hashOfConfig":"198"},{"size":875,"mtime":1611638625000,"results":"268","hashOfConfig":"198"},{"size":321,"mtime":1611555732000,"results":"269","hashOfConfig":"198"},{"size":205,"mtime":1611555732000,"results":"270","hashOfConfig":"198"},{"size":1649,"mtime":1611658968000,"results":"271","hashOfConfig":"198"},{"size":875,"mtime":1611638625000,"results":"272","hashOfConfig":"198"},{"size":5608,"mtime":1611657041000,"results":"273","hashOfConfig":"198"},{"size":1222,"mtime":1611656941000,"results":"274","hashOfConfig":"198"},{"size":509,"mtime":1611638625000,"results":"275","hashOfConfig":"198"},{"size":798,"mtime":1611638625000,"results":"276","hashOfConfig":"198"},{"size":7139,"mtime":1611656971000,"results":"277","hashOfConfig":"198"},{"size":615,"mtime":1611657135000,"results":"278","hashOfConfig":"198"},{"size":168,"mtime":1611555732000,"results":"279","hashOfConfig":"198"},{"size":5562,"mtime":1611638625000,"results":"280","hashOfConfig":"198"},{"size":1953,"mtime":1611638625000,"results":"281","hashOfConfig":"198"},{"size":282,"mtime":1611555732000,"results":"282","hashOfConfig":"198"},{"size":2960,"mtime":1611656028000,"results":"283","hashOfConfig":"198"},{"size":1151,"mtime":1611638625000,"results":"284","hashOfConfig":"198"},{"size":1984,"mtime":1611656065000,"results":"285","hashOfConfig":"198"},{"size":464,"mtime":1611638625000,"results":"286","hashOfConfig":"198"},{"size":798,"mtime":1611638625000,"results":"287","hashOfConfig":"198"},{"size":830,"mtime":1611638625000,"results":"288","hashOfConfig":"198"},{"size":3614,"mtime":1611555732000,"results":"289","hashOfConfig":"198"},{"size":344,"mtime":1611555732000,"results":"290","hashOfConfig":"198"},{"size":677,"mtime":1611555732000,"results":"291","hashOfConfig":"198"},{"size":3386,"mtime":1611555732000,"results":"292","hashOfConfig":"198"},{"size":2359,"mtime":1611555732000,"results":"293","hashOfConfig":"198"},{"size":272,"mtime":1611555732000,"results":"294","hashOfConfig":"198"},{"size":284,"mtime":1611555732000,"results":"295","hashOfConfig":"198"},{"size":1156,"mtime":1611555732000,"results":"296","hashOfConfig":"198"},{"size":2017,"mtime":1611555732000,"results":"297","hashOfConfig":"198"},{"size":390,"mtime":1611555732000,"results":"298","hashOfConfig":"198"},{"size":565,"mtime":1611555732000,"results":"299","hashOfConfig":"198"},{"size":1237,"mtime":1611555732000,"results":"300","hashOfConfig":"198"},{"size":2744,"mtime":1611638625000,"results":"301","hashOfConfig":"198"},{"size":3382,"mtime":1611638625000,"results":"302","hashOfConfig":"198"},{"size":3292,"mtime":1611657047000,"results":"303","hashOfConfig":"198"},{"size":2832,"mtime":1611638625000,"results":"304","hashOfConfig":"198"},{"size":2575,"mtime":1611555732000,"results":"305","hashOfConfig":"198"},{"size":477,"mtime":1611555732000,"results":"306","hashOfConfig":"198"},{"size":3528,"mtime":1611638625000,"results":"307","hashOfConfig":"198"},{"size":1617,"mtime":1611638625000,"results":"308","hashOfConfig":"198"},{"size":2209,"mtime":1611656521000,"results":"309","hashOfConfig":"198"},{"size":1506,"mtime":1611638625000,"results":"310","hashOfConfig":"198"},{"size":1171,"mtime":1611638625000,"results":"311","hashOfConfig":"198"},{"size":2018,"mtime":1611638625000,"results":"312","hashOfConfig":"198"},{"size":502,"mtime":1611638312000,"results":"313","hashOfConfig":"198"},{"size":440,"mtime":1611638625000,"results":"314","hashOfConfig":"198"},{"size":921,"mtime":1611638625000,"results":"315","hashOfConfig":"198"},{"size":914,"mtime":1611638625000,"results":"316","hashOfConfig":"198"},{"size":2789,"mtime":1611638625000,"results":"317","hashOfConfig":"198"},{"size":2877,"mtime":1611658975000,"results":"318","hashOfConfig":"198"},{"size":897,"mtime":1611555732000,"results":"319","hashOfConfig":"198"},{"size":1190,"mtime":1611555732000,"results":"320","hashOfConfig":"198"},{"size":735,"mtime":1611658708000,"results":"321","hashOfConfig":"198"},{"size":6696,"mtime":1611674861000,"results":"322","hashOfConfig":"198"},{"size":817,"mtime":1611555732000,"results":"323","hashOfConfig":"198"},{"size":3236,"mtime":1611555732000,"results":"324","hashOfConfig":"198"},{"size":428,"mtime":1611555732000,"results":"325","hashOfConfig":"198"},{"size":1192,"mtime":1611555732000,"results":"326","hashOfConfig":"198"},{"size":573,"mtime":1611555732000,"results":"327","hashOfConfig":"198"},{"size":2454,"mtime":1611555732000,"results":"328","hashOfConfig":"198"},{"size":671,"mtime":1611555732000,"results":"329","hashOfConfig":"198"},{"size":553,"mtime":1611638625000,"results":"330","hashOfConfig":"198"},{"size":1067,"mtime":1611555732000,"results":"331","hashOfConfig":"198"},{"size":1863,"mtime":1611638625000,"results":"332","hashOfConfig":"198"},{"size":962,"mtime":1611555732000,"results":"333","hashOfConfig":"198"},{"size":992,"mtime":1611555732000,"results":"334","hashOfConfig":"198"},{"size":524,"mtime":1611638315000,"results":"335","hashOfConfig":"198"},{"size":1928,"mtime":1611656499000,"results":"336","hashOfConfig":"198"},{"size":1049,"mtime":1611638625000,"results":"337","hashOfConfig":"198"},{"size":1847,"mtime":1611638625000,"results":"338","hashOfConfig":"198"},{"size":1094,"mtime":1611638625000,"results":"339","hashOfConfig":"198"},{"size":1876,"mtime":1611638344000,"results":"340","hashOfConfig":"198"},{"size":60,"mtime":1611555732000,"results":"341","hashOfConfig":"198"},{"size":764,"mtime":1611555732000,"results":"342","hashOfConfig":"198"},{"size":1578,"mtime":1611555732000,"results":"343","hashOfConfig":"198"},{"size":1999,"mtime":1611555732000,"results":"344","hashOfConfig":"198"},{"size":2312,"mtime":1611656788000,"results":"345","hashOfConfig":"198"},{"size":308,"mtime":1611638625000,"results":"346","hashOfConfig":"198"},{"size":1972,"mtime":1611555732000,"results":"347","hashOfConfig":"198"},{"size":1641,"mtime":1611555732000,"results":"348","hashOfConfig":"198"},{"size":4064,"mtime":1611555732000,"results":"349","hashOfConfig":"198"},{"size":501,"mtime":1611638625000,"results":"350","hashOfConfig":"198"},{"size":3699,"mtime":1611638625000,"results":"351","hashOfConfig":"198"},{"size":1580,"mtime":1611638625000,"results":"352","hashOfConfig":"198"},{"size":902,"mtime":1611638625000,"results":"353","hashOfConfig":"198"},{"size":1563,"mtime":1611638183000,"results":"354","hashOfConfig":"198"},{"size":39,"mtime":1611555732000,"results":"355","hashOfConfig":"198"},{"size":344,"mtime":1611555732000,"results":"356","hashOfConfig":"198"},{"size":41,"mtime":1611555732000,"results":"357","hashOfConfig":"198"},{"size":1944,"mtime":1611638625000,"results":"358","hashOfConfig":"198"},{"size":1120,"mtime":1611555732000,"results":"359","hashOfConfig":"198"},{"size":1664,"mtime":1611638255000,"results":"360","hashOfConfig":"198"},{"size":742,"mtime":1611555732000,"results":"361","hashOfConfig":"198"},{"size":76,"mtime":1611555732000,"results":"362","hashOfConfig":"198"},{"size":35,"mtime":1611555732000,"results":"363","hashOfConfig":"198"},{"size":686,"mtime":1611555732000,"results":"364","hashOfConfig":"198"},{"size":3083,"mtime":1611555732000,"results":"365","hashOfConfig":"198"},{"size":753,"mtime":1611657233000,"results":"366","hashOfConfig":"198"},{"size":1789,"mtime":1611638625000,"results":"367","hashOfConfig":"198"},{"size":1874,"mtime":1611638625000,"results":"368","hashOfConfig":"198"},{"size":1933,"mtime":1611638625000,"results":"369","hashOfConfig":"198"},{"size":330,"mtime":1611555732000,"results":"370","hashOfConfig":"198"},{"size":580,"mtime":1611638625000,"results":"371","hashOfConfig":"198"},{"size":718,"mtime":1611638625000,"results":"372","hashOfConfig":"198"},{"size":900,"mtime":1611638625000,"results":"373","hashOfConfig":"198"},{"size":1293,"mtime":1611555732000,"results":"374","hashOfConfig":"198"},{"size":1550,"mtime":1611555732000,"results":"375","hashOfConfig":"198"},{"size":4124,"mtime":1611656780000,"results":"376","hashOfConfig":"198"},{"size":2314,"mtime":1611638625000,"results":"377","hashOfConfig":"198"},{"size":2955,"mtime":1611656837000,"results":"378","hashOfConfig":"198"},{"size":1103,"mtime":1611638625000,"results":"379","hashOfConfig":"198"},{"size":283,"mtime":1611555732000,"results":"380","hashOfConfig":"198"},{"size":34,"mtime":1611555732000,"results":"381","hashOfConfig":"198"},{"size":2070,"mtime":1611555732000,"results":"382","hashOfConfig":"198"},{"size":52,"mtime":1611555732000,"results":"383","hashOfConfig":"198"},{"size":2971,"mtime":1611656819000,"results":"384","hashOfConfig":"198"},{"size":2720,"mtime":1611656851000,"results":"385","hashOfConfig":"198"},{"size":1290,"mtime":1611638625000,"results":"386","hashOfConfig":"198"},{"size":3322,"mtime":1611555732000,"results":"387","hashOfConfig":"198"},{"size":2355,"mtime":1611555732000,"results":"388","hashOfConfig":"198"},{"size":460,"mtime":1611555732000,"results":"389","hashOfConfig":"198"},{"size":899,"mtime":1611638177000,"results":"390","hashOfConfig":"198"},{"size":1314,"mtime":1611656801000,"results":"391","hashOfConfig":"198"},{"size":40,"mtime":1611555732000,"results":"392","hashOfConfig":"198"},{"size":1705,"mtime":1611638250000,"results":"393","hashOfConfig":"198"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},"131pcpq",{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"401","messages":"402","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"396"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"434","messages":"435","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"396"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"453","messages":"454","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"396"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"468","messages":"469","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"396"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"481","messages":"482","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"396"},{"filePath":"484","messages":"485","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"396"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"491","messages":"492","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"396"},{"filePath":"494","messages":"495","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"396"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"521","messages":"522","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"396"},{"filePath":"524","messages":"525","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"396"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"543","messages":"544","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"396"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"548","messages":"549","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"396"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"553","messages":"554","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"396"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"564","messages":"565","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"396"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"579","messages":"580","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"396"},{"filePath":"582","messages":"583","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"396"},{"filePath":"585","messages":"586","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"396"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"594","messages":"595","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"396"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"599","messages":"600","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"396"},{"filePath":"602","messages":"603","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"396"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"611","messages":"612","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"396"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"624","messages":"625","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"396"},{"filePath":"627","messages":"628","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"396"},{"filePath":"630","messages":"631","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"396"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"637","messages":"638","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"396"},{"filePath":"640","messages":"641","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"396"},{"filePath":"643","messages":"644","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"396"},{"filePath":"646","messages":"647","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"396"},{"filePath":"649","messages":"650","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"396"},{"filePath":"652","messages":"653","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"396"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"659","messages":"660","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"396"},{"filePath":"662","messages":"663","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"396"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"669","messages":"670","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"396"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"684","messages":"685","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"396"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"693","messages":"694","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"396"},{"filePath":"696","messages":"697","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"396"},{"filePath":"699","messages":"700","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"396"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"704","messages":"705","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"396"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"709","messages":"710","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"396"},{"filePath":"712","messages":"713","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"396"},{"filePath":"715","messages":"716","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"396"},{"filePath":"718","messages":"719","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"396"},{"filePath":"721","messages":"722","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"396"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"726","messages":"727","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"396"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"745","messages":"746","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"396"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"750","messages":"751","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"396"},{"filePath":"753","messages":"754","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"396"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"762","messages":"763","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"396"},{"filePath":"765","messages":"766","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"396"},{"filePath":"768","messages":"769","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"396"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"779","messages":"780","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"396"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"784","messages":"785","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"396"},{"filePath":"787","messages":"788","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"396"},{"filePath":"790","messages":"791","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"396"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"805","messages":"806","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"396"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"832","messages":"833","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834","usedDeprecatedRules":"396"},{"filePath":"835","messages":"836","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"396"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"396"},{"filePath":"842","messages":"843","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844","usedDeprecatedRules":"396"},"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/index.tsx",[],[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/App.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/Providers.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/style/Global.tsx",["845"],"import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PizzaTheme } from '@pizzafinance/ui-sdk/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PizzaTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Heebo', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/PageLoader.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/NotFound.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftGlobalNotification.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/hooks.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/getRpcUrl.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Menu/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/ThemeContext.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/BlockContext.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/RefreshContext.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/Localisation/languageContext.tsx",["846"],"import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/layout/Page.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/actions.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/Syrup.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Menu/config.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/Home.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/Farms.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/Lottery.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/multicall.ts",["847"],"import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useI18n.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftList.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/HowItWorks.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftInfo.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/CurrentIfo.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/PastIfo.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/contexts/NftProvider.tsx",["848"],"import React, { createContext, ReactNode, useEffect, useRef, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useBlock from 'hooks/useBlock'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\nimport multicall from 'utils/multicall'\nimport { getPancakeRabbitContract } from '../utils/contracts'\n\ninterface NftProviderProps {\n  children: ReactNode\n}\n\ntype BunnyMap = {\n  [key: number]: number[]\n}\n\ntype State = {\n  isInitialized: boolean\n  canClaim: boolean\n  hasClaimed: boolean\n  countBunniesBurnt: number\n  endBlockNumber: number\n  startBlockNumber: number\n  totalSupplyDistributed: number\n  currentDistributedSupply: number\n  balanceOf: number\n  bunnyMap: BunnyMap\n}\n\ntype Context = {\n  canBurnNft: boolean\n  getTokenIds: (bunnyId: number) => number[]\n  reInitialize: () => void\n} & State\n\nexport const NftProviderContext = createContext<Context | null>(null)\n\nconst NftProvider: React.FC<NftProviderProps> = ({ children }) => {\n  const isMounted = useRef(true)\n  const [state, setState] = useState<State>({\n    isInitialized: false,\n    canClaim: false,\n    hasClaimed: false,\n    countBunniesBurnt: 0,\n    startBlockNumber: 0,\n    endBlockNumber: 0,\n    totalSupplyDistributed: 0,\n    currentDistributedSupply: 0,\n    balanceOf: 0,\n    bunnyMap: {},\n  })\n  const { account } = useWallet()\n  const currentBlock = useBlock()\n\n  const { isInitialized } = state\n\n  // Static data\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const [\n          startBlockNumberArr,\n          endBlockNumberArr,\n          countBunniesBurntArr,\n          totalSupplyDistributedArr,\n          currentDistributedSupplyArr,\n        ] = await multicall(rabbitmintingfarm, [\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'startBlockNumber' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'endBlockNumber' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'countBunniesBurnt' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\n        ])\n\n        // TODO: Figure out why these are coming back as arrays\n        const [startBlockNumber]: [BigNumber] = startBlockNumberArr\n        const [endBlockNumber]: [BigNumber] = endBlockNumberArr\n        const [countBunniesBurnt]: [BigNumber] = countBunniesBurntArr\n        const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\n        const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\n\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n          countBunniesBurnt: countBunniesBurnt.toNumber(),\n          startBlockNumber: startBlockNumber.toNumber(),\n          endBlockNumber: endBlockNumber.toNumber(),\n          currentDistributedSupply: currentDistributedSupply.toNumber(),\n          totalSupplyDistributed: totalSupplyDistributed.toNumber(),\n        }))\n      } catch (error) {\n        console.error('an error occured', error)\n      }\n    }\n\n    fetchContractData()\n  }, [isInitialized, setState])\n\n  // Data from the contract that needs an account\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const pancakeRabbitsContract = getPancakeRabbitContract()\n        const [canClaimArr, hasClaimedArr] = await multicall(rabbitmintingfarm, [\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\n        ])\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\n        const [canClaim]: [boolean] = canClaimArr\n        const [hasClaimed]: [boolean] = hasClaimedArr\n\n        let bunnyMap: BunnyMap = {}\n\n        // If the \"balanceOf\" is greater than 0 then retrieve the tokenIds\n        // owned by the wallet, then the bunnyId's associated with the tokenIds\n        if (balanceOf > 0) {\n          const getTokenIdAndBunnyId = async (index: number) => {\n            try {\n              const tokenId = await pancakeRabbitsContract.methods.tokenOfOwnerByIndex(account, index).call()\n              const bunnyId = await pancakeRabbitsContract.methods.getBunnyId(tokenId).call()\n\n              return [parseInt(bunnyId, 10), parseInt(tokenId, 10)]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          // While improbable a wallet can own more than one of the same bunny so the format is:\n          // { [bunnyId]: [array of tokenIds] }\n          bunnyMap = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [bunnyId, tokenId] = association\n\n            return {\n              ...accum,\n              [bunnyId]: accum[bunnyId] ? [...accum[bunnyId], tokenId] : [tokenId],\n            }\n          }, {})\n        }\n\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n          canClaim,\n          hasClaimed,\n          balanceOf,\n          bunnyMap,\n        }))\n      } catch (error) {\n        console.error('an error occured', error)\n      }\n    }\n\n    if (account) {\n      fetchContractData()\n    }\n  }, [isInitialized, account, setState])\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [isMounted])\n\n  const canBurnNft = currentBlock <= state.endBlockNumber\n  const getTokenIds = (bunnyId: number) => state.bunnyMap[bunnyId]\n\n  /**\n   * Allows consumers to re-fetch all data from the contract. Triggers the effects.\n   * For example when a transaction has been completed\n   */\n  const reInitialize = () => {\n    // Only attempt to re-initialize if the component is still mounted\n    // Transactions can take awhile so it is likely some users will navigate to another page\n    // before the transaction is finished\n    if (isMounted.current) {\n      setState((prevState) => ({ ...prevState, isInitialized: false }))\n    }\n  }\n\n  return (\n    <NftProviderContext.Provider value={{ ...state, canBurnNft, getTokenIds, reInitialize }}>\n      {children}\n    </NftProviderContext.Provider>\n  )\n}\n\nexport default NftProvider\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/Hero.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/nfts.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/layout/Container.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useRefresh.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useTheme.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/web3.ts",["849"],"import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/Localisation/translationsContext.ts",["850"],"import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/localisation/languageCodes.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/translateTextHelpers.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/PastDrawsPage.tsx",["851"],"import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pizzafinance/ui-sdk'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pizza-lottery-bg.png\" alt=\"lottery pizza\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/NextDrawPage.tsx",["852"],"import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@pizzafinance/ui-sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/Divider.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CakeStats.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/TotalValueLockedCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/Divider.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoTabButtons/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftGrid.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/StatusCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftProgressSimple.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftProgress.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/Divider.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/Hero.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCards.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/utils/contracts.ts",["853"],"import { AbiItem } from 'web3-utils'\nimport { getContract } from 'utils/web3'\nimport { ContractOptions } from 'web3-eth-contract'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport { RABBIT_MINTING_FARM_ADDRESS, PANCAKE_RABBITS_ADDRESS } from 'config/constants/nfts'\n\n// TODO: Figure out how to add current account to contracts to write methods can be used\n\nexport const getRabbitMintingContract = (contractOptions?: ContractOptions) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return getContract(rabbitMintingFarmAbi, RABBIT_MINTING_FARM_ADDRESS, contractOptions)\n}\n\nexport const getPancakeRabbitContract = (contractOptions?: ContractOptions) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return getContract(pancakeRabbitsAbi, PANCAKE_RABBITS_ADDRESS, contractOptions)\n}\n\nexport default getRabbitMintingContract\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/FarmCard.tsx",["854"],"import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text } from '@pizzafinance/ui-sdk'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 16px;\n  box-shadow: 0px 0px 10px rgba(9,31,67,0.1);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PIZZAFINANCE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'PIZZA'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1)\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'PIZZA' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={isCommunityFarm}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(352, 'APY')}:</Text>\n          <Text bold>{farm.apy ? `${farmAPY}%` : 'Loading ...'}</Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/Title.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/LotteryCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/FarmStakingCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/PoolCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/Coming.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/pools/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/lotteryUtils.js",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/addressHelpers.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useContract.ts",["855"],"import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/PoolTabButtons/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/contexts/PastLotteryDataContext.tsx",["856"],"import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useBlock.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/types.ts",["857"],"export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmTabButtons/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftCard/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/HowItWorks.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CardValue.tsx",["858"],"import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pizzafinance/ui-sdk'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px' }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/WinningNumbers.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NftInWalletCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/InfoRow.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/LotteryProgress.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/layout/Flex.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/CardActionsContainer.tsx",["859"],"import React, { useMemo, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from '@pizzafinance/ui-sdk'\nimport { Farm } from 'state/types'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport { useApprove } from 'hooks/useApprove'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpContract = useMemo(() => {\n    return getContract(ethereum as provider, lpAddress)\n  }, [ethereum, lpAddress])\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} />\n    ) : (\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(999, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          PIZZA\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/CardHeading.tsx",["860"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@pizzafinance/ui-sdk'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/DetailsSection.tsx",["861"],"import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from '@pizzafinance/ui-sdk'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\n\nexport interface TokenAddressesObject {\n  56?: string\n  97?: string\n}\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  quoteTokenAdresses?: TokenAddressesObject\n  quoteTokenSymbol?: string\n  tokenAddresses: TokenAddressesObject\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  removed,\n  totalValueFormated,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(316, 'Stake')}:</Text>\n        <StyledLinkExternal href={`https://swap.pizzafinance.app/#/add/${liquidityUrlPathParts}`}>\n          {lpLabel}\n        </StyledLinkExternal>\n      </Flex>\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\n          <Text>{totalValueFormated}</Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          {TranslateString(356, 'View on BscScan')}\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/LotteryJackpot.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CakeWalletBalance.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CakeHarvestBalance.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/CardFooter.tsx",["862"],"import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/CardTitle.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/Card.tsx",["863"],"import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/pools/fetchPoolsUser.ts",["864"],"import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/pools/fetchPools.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/api.ts",["865"],"import { useEffect, useState } from 'react'\n\n/*\n * Due to Cors the api was forked and a proxy was created\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\n */\nexport const baseUrl = 'https://api.pancakeswap.com/api/v1'\n\n/* eslint-disable camelcase */\n\nexport interface TradePair {\n  swap_pair_contract: string\n  base_symbol: string\n  quote_symbol: string\n  last_price: number\n  base_volume_24_h: number\n  quote_volume_24_h: number\n}\n\nexport interface ApiStatResponse {\n  update_at: string\n  '24h_total_volume': number\n  total_value_locked: number\n  total_value_locked_all: number\n  trade_pairs: {\n    [key: string]: TradePair\n  }\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<ApiStatResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/stat`)\n        const responsedata: ApiStatResponse = await response.json()\n\n        setData(responsedata)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useTokenBalance.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/formatBalance.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/formatTimePeriod.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/getTimePeriods.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/TransferNftModal.tsx",["866"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Input, Modal, Text } from '@pizzafinance/ui-sdk'\nimport { PANCAKE_RABBITS_ADDRESS } from 'config/constants/nfts'\nimport { Nft } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface TransferNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  margin-bottom: 8px;\n  margin-top: 24px;\n`\n\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(null)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const pancakeRabbitsContract = usePancakeRabbits(PANCAKE_RABBITS_ADDRESS)\n\n  const handleConfirm = async () => {\n    try {\n      const isValidAddress = Web3.utils.isAddress(value)\n\n      if (!isValidAddress) {\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\n      } else {\n        await pancakeRabbitsContract.methods\n          .transferFrom(account, value, tokenIds[0])\n          .send({ from: account })\n          .on('sending', () => {\n            setIsLoading(true)\n          })\n          .on('receipt', () => {\n            onDismiss()\n            onSuccess()\n          })\n          .on('error', () => {\n            console.error(error)\n            setError('Unable to transfer NFT')\n            setIsLoading(false)\n          })\n      }\n    } catch (err) {\n      console.error('Unable to transfer NFT:', err)\n    }\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(inputValue)\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\n        <Input\n          id=\"transferAddress\"\n          name=\"address\"\n          type=\"text\"\n          placeholder={TranslateString(999, 'Paste address')}\n          value={value}\n          onChange={handleChange}\n          isWarning={error}\n          disabled={isLoading}\n        />\n      </ModalContent>\n      <Actions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !value}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default TransferNftModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/BurnNftModal.tsx",["867"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Checkbox, Modal, Text } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport { Nft } from 'config/constants/types'\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\nimport { useRabbitMintingFarm } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface BurnNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst BurnNftModal: React.FC<BurnNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [accepted, setAccepted] = useState(false)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const rabbitMintingContract = useRabbitMintingFarm(RABBIT_MINTING_FARM_ADDRESS)\n\n  const handleConfirm = async () => {\n    try {\n      const [tokenId] = tokenIds\n\n      await rabbitMintingContract.methods\n        .burnNFT(tokenId)\n        .send({ from: account })\n        .on('sending', () => {\n          setIsLoading(true)\n        })\n        .on('receipt', () => {\n          onDismiss()\n          onSuccess()\n        })\n        .on('error', () => {\n          console.error(error)\n          setError('Unable to burn NFT')\n          setIsLoading(false)\n        })\n    } catch (err) {\n      console.error('Unable to burn NFT:', err)\n    }\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Trade in NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'Trade in')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <InfoRow>\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\n          <Value>10 PIZZA</Value>\n        </InfoRow>\n      </ModalContent>\n      <ModalContent>\n        <Text color=\"failure\">\n          {TranslateString(999, 'When you trade in this NFT to receive PIZZA, you will lose access to it forever!')}\n        </Text>\n        <Text color=\"failure\">{TranslateString(999, 'It will be burned and removed from circulation')}</Text>\n      </ModalContent>\n      <ModalContent style={{ alignItems: 'center', display: 'inline-flex' }}>\n        <Checkbox checked={accepted} scale=\"sm\" onChange={() => setAccepted(!accepted)} />\n        <Text ml=\"8px\" onClick={() => setAccepted(!accepted)} style={{ cursor: 'pointer' }}>\n          {TranslateString(999, 'I understand')}\n        </Text>\n      </ModalContent>\n      <Actions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !accepted}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default BurnNftModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/ClaimNftModal.tsx",["868"],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Modal, Text } from '@pizzafinance/ui-sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { Nft } from 'config/constants/types'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useRabbitMintingFarm } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface ClaimNftModalProps {\n  nft: Nft\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const rabbitMintingContract = useRabbitMintingFarm(RABBIT_MINTING_FARM_ADDRESS)\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const cakeInWallet = getBalanceNumber(cakeBalance)\n\n  const handleConfirm = async () => {\n    try {\n      await rabbitMintingContract.methods\n        .mintNFT(nft.bunnyId)\n        .send({ from: account })\n        .on('sending', () => {\n          setIsLoading(true)\n        })\n        .on('receipt', () => {\n          onDismiss()\n          onSuccess()\n        })\n        .on('error', () => {\n          console.error(error)\n          setError('Unable to claim NFT')\n          setIsLoading(false)\n        })\n    } catch (err) {\n      console.error('Unable to mint NFT:', err)\n    }\n  }\n\n  useEffect(() => {\n    if (cakeInWallet === 0) {\n      setError('You must have a CAKE balance greater than zero to claim NFT')\n    }\n  }, [cakeInWallet, setError])\n\n  return (\n    <Modal title={TranslateString(999, 'Claim NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n      </ModalContent>\n      <Actions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || cakeInWallet <= 0}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default ClaimNftModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/helpers/CountdownHelpers.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/CardContent.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardContribute.tsx",["869"],"import React, { useState, useEffect } from 'react'\nimport { useModal, Button, Text } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { useERC20 } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport { useIfoApprove } from 'hooks/useApprove'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  tokenDecimals: number\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  address,\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  tokenDecimals,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\n\n  const { account } = useWallet()\n  const contractRaisingToken = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\n  const onApprove = useIfoApprove(contractRaisingToken, address)\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\n      const userinfo = await contract.methods.userInfo(account).call()\n\n      setUserInfo(userinfo)\n      setOfferingTokenBalance(balance)\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  if (allowance === null) {\n    return null\n  }\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.harvest().send({ from: account })\n    setPendingTx(false)\n  }\n  const isFinished = status === 'finished'\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\n\n  if (allowance <= 0) {\n    return (\n      <Button\n        fullWidth\n        disabled={pendingTx || isFinished}\n        onClick={async () => {\n          try {\n            setPendingTx(true)\n            await onApprove()\n            setPendingTx(false)\n          } catch (e) {\n            setPendingTx(false)\n            console.error(e)\n          }\n        }}\n      >\n        Approve\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userInfo.claimed}\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\n        value={\n          // eslint-disable-next-line no-nested-ternary\n          isFinished\n            ? userInfo.claimed\n              ? 'Claimed'\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\n        }\n        onClick={isFinished ? claim : onPresentContributeModal}\n      />\n      <Text fontSize=\"14px\" color=\"textSubtle\">\n        {isFinished\n          ? `You'll be refunded any excess tokens when you claim`\n          : `${percentOfUserContribution.toFixed(5)}% of total`}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardTime.tsx",["870"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from '@pizzafinance/ui-sdk'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isLoading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isLoading, status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (isLoading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardDetails.tsx",["871"],"import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchDate,\n  launchTime,\n  saleAmount,\n  raiseAmount,\n  cakeToBurn,\n  projectSiteUrl,\n  raisingAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\n          <Text>\n            {launchDate},\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime}\n            </Link>\n          </Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>{saleAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n          <Text>{raiseAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(586, 'PIZZA to burn (USD)')}</Display>\n          <Text>{cakeToBurn}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardDescription.tsx",["872"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/HarvestAction.tsx",["873"],"import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {TranslateString(999, 'Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/FarmCard/StakeAction.tsx",["874"],"import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, tokenName, pid }) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Tags.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardProgress.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/IfoCardHeader.tsx",["875"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pizzafinance/ui-sdk'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastDrawsHistory/Legend.tsx",["876"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(999, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastDrawsHistory/HistoryChart.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/pools.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/Image.tsx",["877"],"import React from 'react'\nimport styled from 'styled-components'\n\ninterface ImageProps {\n  src: string\n  alt: string\n  originalLink?: string\n}\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: 100%;\n`\n\nconst StyledImage = styled.img`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  transition: opacity 1s linear;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 32px 32px 0 0;\n`\n\nconst Image: React.FC<ImageProps> = ({ src, alt, originalLink }) => {\n  const previewImage = <StyledImage src={src} alt={alt} />\n\n  return (\n    <Container>\n      {originalLink ? (\n        <a href={originalLink} target=\"_blank\" rel=\"noreferrer noopener\">\n          {previewImage}\n        </a>\n      ) : (\n        previewImage\n      )}\n    </Container>\n  )\n}\n\nexport default Image\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/contracts.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/ifo.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/config/constants/farms.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useGetLotteryHasDrawn.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useTickets.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useTimer.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/hooks/useGetRecentLotteryRoundData.ts",["878"],"import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/getLiquidityUrlPathParts.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useApprove.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/Loading.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx",["879"],"import React from 'react'\nimport { Card } from '@pizzafinance/ui-sdk'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/erc20.ts",["880"],"import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx",["881"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(999, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useAllEarnings.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useWeb3.ts",["882"],"import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/UnlockButton.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/ContributeModal.tsx",["883"],"import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pizzafinance/ui-sdk'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await contract.methods\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\n              .send({ from: account })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://swap.pizzafinance.app/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Ifos/components/IfoCard/LabelButton.tsx",["884"],"import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@pizzafinance/ui-sdk'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  padding-left: 16px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/WithdrawModal.tsx",["885"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Balance.tsx",["886"],"import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pizzafinance/ui-sdk'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Farms/components/DepositModal.tsx",["887"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastDrawsHistory/LineChartWrapper.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/getLotteryRoundData.ts",["888"],"export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useAllowance.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useHarvest.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useUnstake.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useStake.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/utils/callHelpers.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/Timestamp.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PrizeGrid.tsx",["889"],"import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pizzafinance/ui-sdk'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(999, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem marginBottom=\"20px\">\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/LotteryCardHeading.tsx",["890"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pizzafinance/ui-sdk'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Input/BalanceInput.tsx",["891"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/TokenInput/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/helpers/formatLotteryDate.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/ModalActions/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/UserTicketsModal.tsx",["892"],"import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Input/Input.tsx",["893"],"import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/TokenInput/TokenInput.tsx",["894"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pizzafinance/ui-sdk'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/ModalActions/ModalActions.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Input/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Spacer/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Spacer/Spacer.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/HarvestButton.tsx",["895"],"import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/OldSyrupTitle.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/CompoundModal.tsx",["896"],"import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/WithdrawModal.tsx",["897"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Pools/components/DepositModal.tsx",["898"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Home/components/CakeWinnings.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/YouWonCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/NoNftsToClaimCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/UnlockWalletCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useFarmsWithBalance.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/hooks/useBuyLottery.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/BuyTicketModal.tsx",["899"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy('10', numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > 50) {\n      setVal('50')\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * 10\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"PIZZA\"\n      />\n      <div>\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 PIZZA')}</Tips>\n        <Tips>{TranslateString(458, '1 Ticket = 10 PIZZA')}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your PIZZA cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} PIZZA`)}</Final>\n      </div>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          fullWidth\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TotalPrizesCard/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/YourPrizesCard/index.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Nft/components/SecondaryCard.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Label/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/farms/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/ExpandableSectionButton/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/TicketActions.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/farms/fetchFarms.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/state/farms/fetchFarmUser.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/Label/Label.tsx",["900"],"import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx",["901"],"import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pizzafinance/ui-sdk'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/views/Lottery/components/TicketCard/PurchaseWarningModal.tsx",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/TicketInput/index.ts",[],"/home/solproc/@PROJECT/@DEFI/@BSC/@bsc-farming/@pizza/front-end/pizza-frontend/src/components/TicketInput/TicketInput.tsx",["902"],"import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pizzafinance/ui-sdk'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  onSelectMax?: () => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n",{"ruleId":null,"fatal":true,"severity":2,"message":"903","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"904","line":10,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"905","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"906","line":20,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"907","line":8,"column":82},{"ruleId":null,"fatal":true,"severity":2,"message":"908","line":5,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"909","line":28,"column":52},{"ruleId":null,"fatal":true,"severity":2,"message":"910","line":35,"column":52},{"ruleId":null,"fatal":true,"severity":2,"message":"911","line":11,"column":51},{"ruleId":null,"fatal":true,"severity":2,"message":"912","line":85,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"913","line":34,"column":23},{"ruleId":null,"fatal":true,"severity":2,"message":"914","line":5,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"915","line":5,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"916","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"917","line":24,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"918","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"919","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"920","line":19,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"921","line":3,"column":35},{"ruleId":null,"fatal":true,"severity":2,"message":"922","line":20,"column":65},{"ruleId":null,"fatal":true,"severity":2,"message":"923","line":13,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"924","line":14,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"925","line":13,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"926","line":16,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"927","line":16,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"928","line":10,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"929","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"930","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"931","line":10,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"932","line":14,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"933","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"934","line":17,"column":39},{"ruleId":null,"fatal":true,"severity":2,"message":"935","line":6,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"936","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"937","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"938","line":9,"column":49},{"ruleId":null,"fatal":true,"severity":2,"message":"939","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"940","line":9,"column":82},{"ruleId":null,"fatal":true,"severity":2,"message":"941","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"942","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"943","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"944","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"945","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"946","line":3,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"947","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"948","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"949","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"950","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"951","line":6,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"952","line":9,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"953","line":8,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"954","line":12,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"943","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"945","line":11,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"955","line":13,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"956","line":6,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"957","line":7,"column":3},{"ruleId":null,"fatal":true,"severity":2,"message":"958","line":9,"column":3},"Parsing error: Only declares and type imports are allowed inside declare module\n\n\u001b[0m \u001b[90m  5 | \u001b[39mdeclare module \u001b[32m'styled-components'\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m  \u001b[90m/* eslint-disable @typescript-eslint/no-empty-interface */\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m  \u001b[36mexport\u001b[39m interface \u001b[33mDefaultTheme\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mPizzaTheme\u001b[39m {}\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mGlobalStyle\u001b[39m \u001b[33m=\u001b[39m createGlobalStyle\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mLangType\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  code\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 | \u001b[39m  language\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mLanguageState\u001b[39m {\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39minterface \u001b[33mCall\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  address\u001b[33m:\u001b[39m string \u001b[90m// Address of the contract\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  name\u001b[33m:\u001b[39m string \u001b[90m// Function name on the contract (exemple: balanceOf)\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  params\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m any[] \u001b[90m// Function params\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 18 | \u001b[39mtype \u001b[33mState\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m  isInitialized\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m  canClaim\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m  hasClaimed\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m  countBunniesBurnt\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m  endBlockNumber\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mRPC_URL\u001b[39m \u001b[33m=\u001b[39m getRpcUrl()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m\u001b[36mconst\u001b[39m httpProvider \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mWeb3\u001b[39m\u001b[33m.\u001b[39mproviders\u001b[33m.\u001b[39m\u001b[33mHttpProvider\u001b[39m(\u001b[33mRPC_URL\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m } as \u001b[33mHttpProviderOptions\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[90m/**\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[90m * Provides a web3 instance using our own private provider httpProver\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mTranslationState\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m  translations\u001b[33m:\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m  setTranslations\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mDispatch\u001b[39m\u001b[33m<\u001b[39m\u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mSetStateAction\u001b[39m\u001b[33m<\u001b[39m\u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>>>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m\u001b[36mconst\u001b[39m defaultTranslationState\u001b[33m:\u001b[39m \u001b[33mTranslationState\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 26 | \u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mSecondCardColumnWrapper\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{ isAWin\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 29 | \u001b[39m\u001b[32m  display: flex;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 30 | \u001b[39m\u001b[32m  flex-direction: column;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 | \u001b[39m\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 33 | \u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mSecondCardColumnWrapper\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{ isAWin\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m\u001b[32m  display: flex;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 37 | \u001b[39m\u001b[32m  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 38 | \u001b[39m\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m getRabbitMintingContract \u001b[33m=\u001b[39m (contractOptions\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mContractOptions\u001b[39m) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 | \u001b[39m  \u001b[36mconst\u001b[39m rabbitMintingFarmAbi \u001b[33m=\u001b[39m (rabbitmintingfarm as unknown) as \u001b[33mAbiItem\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  \u001b[36mreturn\u001b[39m getContract(rabbitMintingFarmAbi\u001b[33m,\u001b[39m \u001b[33mRABBIT_MINTING_FARM_ADDRESS\u001b[39m\u001b[33m,\u001b[39m contractOptions)\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 83 | \u001b[39minterface \u001b[33mFarmCardProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 84 | \u001b[39m  farm\u001b[33m:\u001b[39m \u001b[33mFarmWithStakedValue\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 85 | \u001b[39m  removed\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 86 | \u001b[39m  cakePrice\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 87 | \u001b[39m  bnbPrice\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 88 | \u001b[39m  ethereum\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m provider\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 32 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m useIfoContract \u001b[33m=\u001b[39m (address\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 | \u001b[39m  \u001b[36mconst\u001b[39m ifoAbi \u001b[33m=\u001b[39m (ifo as unknown) as \u001b[33mAbiItem\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m  \u001b[36mreturn\u001b[39m useContract(ifoAbi\u001b[33m,\u001b[39m address)\u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 37 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mPastLotteryDataState\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m  mostRecentLotteryNumber\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m  currentLotteryNumber\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m  historyError\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m  historyData\u001b[33m:\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mIfo\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m  id\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m  isActive\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m  address\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m  name\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m  subTitle\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39minterface \u001b[33mCardValueProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m  value\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m  decimals\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  fontSize\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 22 | \u001b[39minterface \u001b[33mFarmCardActionsProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m  farm\u001b[33m:\u001b[39m \u001b[33mFarmWithStakedValue\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 | \u001b[39m  ethereum\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m provider\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 25 | \u001b[39m  account\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 26 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mExpandableSectionProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m  lpLabel\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m  multiplier\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  isCommunityFarm\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  farmImage\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  tokenSymbol\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mTokenAddressesObject\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  \u001b[35m56\u001b[39m\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  \u001b[35m97\u001b[39m\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mExpandableSectionProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  bscScanAddress\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 17 | \u001b[39minterface \u001b[33mProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m  projectLink\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 | \u001b[39m  totalStaked\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m  blocksRemaining\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m  isFinished\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m  blocksUntilStart\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 1 | \u001b[39m\u001b[36mimport\u001b[39m styled from \u001b[32m'styled-components'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mCard\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{ isActive\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[33m;\u001b[39m isFinished\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[32m  background: ${(props) => props.theme.card.background};\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m\u001b[32m  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m\u001b[32m  border-radius: 32px;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 18 | \u001b[39m\u001b[36mconst\u001b[39m nonMasterPools \u001b[33m=\u001b[39m poolsConfig\u001b[33m.\u001b[39mfilter((p) \u001b[33m=>\u001b[39m p\u001b[33m.\u001b[39msousId \u001b[33m!==\u001b[39m \u001b[35m0\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m\u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m getWeb3()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m\u001b[36mconst\u001b[39m masterChefContract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m((masterChefABI as unknown) as \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m getMasterChefAddress())\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m fetchPoolsAllowance \u001b[33m=\u001b[39m async (account) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m  \u001b[36mconst\u001b[39m calls \u001b[33m=\u001b[39m nonBnbPools\u001b[33m.\u001b[39mmap((p) \u001b[33m=>\u001b[39m ({\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mTradePair\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  swap_pair_contract\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m  base_symbol\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m  quote_symbol\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m  last_price\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m  base_volume_24_h\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 12 | \u001b[39minterface \u001b[33mTransferNftModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m  nft\u001b[33m:\u001b[39m \u001b[33mNft\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 | \u001b[39m  tokenIds\u001b[33m:\u001b[39m number[]\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m  onSuccess\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 11 | \u001b[39minterface \u001b[33mBurnNftModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  nft\u001b[33m:\u001b[39m \u001b[33mNft\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m  tokenIds\u001b[33m:\u001b[39m number[]\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m  onSuccess\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 14 | \u001b[39minterface \u001b[33mClaimNftModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m  nft\u001b[33m:\u001b[39m \u001b[33mNft\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 | \u001b[39m  onSuccess\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 14 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m  address\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 | \u001b[39m  currency\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m  currencyAddress\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m  contract\u001b[33m:\u001b[39m \u001b[33mContract\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m  status\u001b[33m:\u001b[39m \u001b[33mIfoStatus\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mIfoCardTimeProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  isLoading\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 | \u001b[39m  status\u001b[33m:\u001b[39m \u001b[33mIfoStatus\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  secondsUntilStart\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  secondsUntilEnd\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m  block\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mIfoCardDetailsProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  launchDate\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  launchTime\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  saleAmount\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  raiseAmount\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  cakeToBurn\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mIfoCardDescriptionProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m  defaultIsOpen\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m  description\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mStyledIfoCardDescription\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  8 | \u001b[39minterface \u001b[33mFarmCardActionsProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  earnings\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 | \u001b[39m  pid\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mHarvestAction\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m\u001b[33m<\u001b[39m\u001b[33mFarmCardActionsProps\u001b[39m\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m ({ earnings\u001b[33m,\u001b[39m pid }) \u001b[33m=>\u001b[39m {\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 12 | \u001b[39minterface \u001b[33mFarmCardActionsProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m  stakedBalance\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 | \u001b[39m  tokenBalance\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m  tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m  pid\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39minterface \u001b[33mIfoCardHeaderProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m  ifoId\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m  name\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  subTitle\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mCircle\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[33m<\u001b[39m{ isPoolSize\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean }\u001b[33m>\u001b[39m\u001b[32m`\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m\u001b[32m  width: 20px;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m\u001b[32m  height: 20px;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m\u001b[32m  border-radius: 10px;\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 | \u001b[39minterface \u001b[33mImageProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m  src\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 | \u001b[39m  alt\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m  originalLink\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 9 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39mtype \u001b[33mGetRecentLotteryRoundDataReturn\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m  isLoading\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m  data\u001b[33m:\u001b[39m \u001b[33mDataResponse\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  mostRecentLotteryNumber\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  error\u001b[33m:\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 | \u001b[39m    message\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  }\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 | \u001b[39m  data\u001b[33m:\u001b[39m \u001b[33mDataResponse\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mPastRoundCard\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m\u001b[33m<\u001b[39m\u001b[33mPastRoundCardProps\u001b[39m\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m ({ error\u001b[33m,\u001b[39m data }) \u001b[33m=>\u001b[39m {\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m getContract \u001b[33m=\u001b[39m (provider\u001b[33m:\u001b[39m \u001b[33mProviderType\u001b[39m\u001b[33m,\u001b[39m address\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  \u001b[36mconst\u001b[39m web3 \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mWeb3\u001b[39m(provider)\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  \u001b[36mconst\u001b[39m contract \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m web3\u001b[33m.\u001b[39meth\u001b[33m.\u001b[39m\u001b[33mContract\u001b[39m((erc20 as unknown) as \u001b[33mAbiItem\u001b[39m\u001b[33m,\u001b[39m address)\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  \u001b[36mreturn\u001b[39m contract\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39minterface \u001b[33mPastLotterySearcherProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m  initialLotteryNumber\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m  onSubmit\u001b[33m:\u001b[39m (num\u001b[33m:\u001b[39m number) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mWrapper\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mRPC_URL\u001b[39m \u001b[33m=\u001b[39m getRpcUrl()\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m\u001b[36mconst\u001b[39m httpProvider \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mWeb3\u001b[39m\u001b[33m.\u001b[39mproviders\u001b[33m.\u001b[39m\u001b[33mHttpProvider\u001b[39m(\u001b[33mRPC_URL\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m } as \u001b[33mHttpProviderOptions\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[90m/**\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[90m * Provides a web3 instance using the provider provided by useWallet\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 | \u001b[39minterface \u001b[33mProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  currency\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 | \u001b[39m  contract\u001b[33m:\u001b[39m any\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  currencyAddress\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39minterface \u001b[33mProps\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mButtonHTMLAttributes\u001b[39m\u001b[33m<\u001b[39m\u001b[33mHTMLButtonElement\u001b[39m\u001b[33m>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m  value\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m  label\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  buttonLabel\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  disabled\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 | \u001b[39minterface \u001b[33mWithdrawModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  max\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 | \u001b[39m  onConfirm\u001b[33m:\u001b[39m (amount\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m  tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39minterface \u001b[33mTextProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m  isDisabled\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m  fontSize\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  color\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 | \u001b[39minterface \u001b[33mDepositModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  max\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 | \u001b[39m  onConfirm\u001b[33m:\u001b[39m (amount\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m  tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 1 | \u001b[39m\u001b[36mexport\u001b[39m type \u001b[33mDataResponse\u001b[39m \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m  lotteryNumber\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 3 | \u001b[39m  lotteryDate\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m  lotteryNumbers\u001b[33m:\u001b[39m number[]\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m  poolSize\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m  burned\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mPrizeGridProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m  lotteryPrizeAmount\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m  pastDraw\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  jackpotMatches\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  twoTicketMatches\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  threeTicketMatches\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m number\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39minterface \u001b[33mHeadingProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m  valueToDisplay\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m  children\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  \u001b[33mIcon\u001b[39m\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mComponentType\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39minterface \u001b[33mProps\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mInputProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  max\u001b[33m:\u001b[39m number \u001b[33m|\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  symbol\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  onSelectMax\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39minterface \u001b[33mUserTicketsModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  myTicketNumbers\u001b[33m:\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33many\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  from\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mInputProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m  endAdornment\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 | \u001b[39m  onChange\u001b[33m:\u001b[39m (e\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFormEvent\u001b[39m\u001b[33m<\u001b[39m\u001b[33mHTMLInputElement\u001b[39m\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m  placeholder\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m  startAdornment\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 9 | \u001b[39m  value\u001b[33m:\u001b[39m string\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39minterface \u001b[33mTokenInputProps\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mInputProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  max\u001b[33m:\u001b[39m number \u001b[33m|\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  symbol\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  onSelectMax\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39minterface \u001b[33mButtonProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m  children\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mReactNode\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m  disabled\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m  href\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  onClick\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  size\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m \u001b[32m'sm'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'md'\u001b[39m \u001b[33m|\u001b[39m \u001b[32m'lg'\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 10 | \u001b[39minterface \u001b[33mDepositModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  earnings\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 12 | \u001b[39m  onConfirm\u001b[33m:\u001b[39m (amount\u001b[33m:\u001b[39m string) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m  tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 11 | \u001b[39minterface \u001b[33mBuyTicketModalProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m  max\u001b[33m:\u001b[39m \u001b[33mBigNumber\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m  onConfirm\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m (amount\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m numbers\u001b[33m:\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m<\u001b[39m\u001b[33mnumber\u001b[39m\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m  onDismiss\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m  tokenName\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 4 | \u001b[39minterface \u001b[33mLabelProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m  text\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 | \u001b[39m  isFinished\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 9 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mLabel\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m\u001b[33m<\u001b[39m\u001b[33mLabelProps\u001b[39m\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m ({ text\u001b[33m,\u001b[39m isFinished \u001b[33m=\u001b[39m \u001b[36mfalse\u001b[39m }) \u001b[33m=>\u001b[39m (\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39m\u001b[36mexport\u001b[39m interface \u001b[33mExpandableSectionButtonProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m  onClick\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m  expanded\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m boolean\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mWrapper\u001b[39m \u001b[33m=\u001b[39m styled\u001b[33m.\u001b[39mdiv\u001b[32m`\u001b[39m\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  7 | \u001b[39minterface \u001b[33mTokenInputProps\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mInputProps\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m  max\u001b[33m:\u001b[39m number \u001b[33m|\u001b[39m string\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m  symbol\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  availableSymbol\u001b[33m:\u001b[39m string\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  onSelectMax\u001b[33m?\u001b[39m\u001b[33m:\u001b[39m () \u001b[33m=>\u001b[39m \u001b[36mvoid\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m}\u001b[0m"]